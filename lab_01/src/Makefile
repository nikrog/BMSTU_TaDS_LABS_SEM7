#############################################################################
# Makefile for building: ppo
# Generated by qmake (3.1) (Qt 5.15.3)
# Project:  ppo.pro
# Template: app
# Command: /usr/lib/qt5/bin/qmake -o Makefile ppo.pro
#############################################################################

MAKEFILE      = Makefile

EQ            = =

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -Wextra -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -std=gnu++11 -Wall -Wextra -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I. -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I. -I. -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++
QMAKE         = /usr/lib/qt5/bin/qmake
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
QINSTALL      = /usr/lib/qt5/bin/qmake -install qinstall
QINSTALL_PROGRAM = /usr/lib/qt5/bin/qmake -install qinstall -exe
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
DISTNAME      = ppo1.0.0
DISTDIR = /home/pavela/arper/PPO/ppo/src/.tmp/ppo1.0.0
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS) -lpqxx /usr/lib/x86_64-linux-gnu/libQt5Widgets.so /usr/lib/x86_64-linux-gnu/libQt5Gui.so /usr/lib/x86_64-linux-gnu/libQt5Core.so -lGL -lpthread   
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = strip

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = gui/main/GuiApp.cpp \
		gui/ui/addbankwindow.cpp \
		gui/ui/addproductwindow.cpp \
		gui/ui/adminwindow.cpp \
		gui/ui/changepasswordwindow.cpp \
		gui/ui/clientwindow.cpp \
		gui/ui/mainwindow.cpp \
		gui/managers_manager/GuiManagersManager.cpp \
		gui/client_manager/GuiClientManager.cpp \
		gui/product_manager/GuiProductManager.cpp \
		gui/request_manager/GuiRequestManager.cpp \
		gui/bank_manager/GuiBankManager.cpp \
		gui/auth_manager/GuiAuthManager.cpp \
		business_logic/rules/UserRules.cpp \
		business_logic/rules/ClientRules.cpp \
		business_logic/rules/BankRules.cpp \
		business_logic/rules/ProductRules.cpp \
		business_logic/rules/RequestRules.cpp \
		business_logic/rules/ManagerRules.cpp \
		business_logic/exceptions/exceptions.cpp \
		business_logic/models/ModelUser.cpp \
		business_logic/models/ModelBank.cpp \
		business_logic/models/ModelClient.cpp \
		business_logic/models/ModelManager.cpp \
		business_logic/models/ModelProduct.cpp \
		business_logic/models/ModelRequest.cpp \
		business_logic/models/errors.cpp \
		config/ConfigManager.cpp \
		gui/ui/makerequestwindow.cpp \
		gui/ui/managerupdateclientwindow.cpp \
		gui/ui/managerwindow.cpp \
		gui/ui/rateproductwindow.cpp \
		gui/ui/registerclient2window.cpp \
		gui/ui/registerclientwindow.cpp \
		gui/ui/updatebankwindow.cpp \
		gui/ui/updateclientwindow.cpp \
		gui/ui/updateproductwindow.cpp \
		gui/ui/userwindow.cpp \
		logger/Logger.cpp \
		data_access/connection/connection.cpp \
		data_access/commands/PostgresCommands.cpp \
		data_access/PostgresRepositories/PgBankRepository.cpp \
		data_access/PostgresRepositories/PgClientRepository.cpp \
		data_access/PostgresRepositories/PgManagerRepository.cpp \
		data_access/PostgresRepositories/PgUserRepository.cpp \
		data_access/PostgresRepositories/PgProductRepository.cpp \
		data_access/PostgresRepositories/PgRequestRepository.cpp moc_addbankwindow.cpp \
		moc_addproductwindow.cpp \
		moc_adminwindow.cpp \
		moc_changepasswordwindow.cpp \
		moc_clientwindow.cpp \
		moc_mainwindow.cpp \
		moc_makerequestwindow.cpp \
		moc_managerupdateclientwindow.cpp \
		moc_managerwindow.cpp \
		moc_rateproductwindow.cpp \
		moc_registerclient2window.cpp \
		moc_registerclientwindow.cpp \
		moc_updatebankwindow.cpp \
		moc_updateclientwindow.cpp \
		moc_updateproductwindow.cpp \
		moc_userwindow.cpp
OBJECTS       = GuiApp.o \
		addbankwindow.o \
		addproductwindow.o \
		adminwindow.o \
		changepasswordwindow.o \
		clientwindow.o \
		mainwindow.o \
		GuiManagersManager.o \
		GuiClientManager.o \
		GuiProductManager.o \
		GuiRequestManager.o \
		GuiBankManager.o \
		GuiAuthManager.o \
		UserRules.o \
		ClientRules.o \
		BankRules.o \
		ProductRules.o \
		RequestRules.o \
		ManagerRules.o \
		exceptions.o \
		ModelUser.o \
		ModelBank.o \
		ModelClient.o \
		ModelManager.o \
		ModelProduct.o \
		ModelRequest.o \
		errors.o \
		ConfigManager.o \
		makerequestwindow.o \
		managerupdateclientwindow.o \
		managerwindow.o \
		rateproductwindow.o \
		registerclient2window.o \
		registerclientwindow.o \
		updatebankwindow.o \
		updateclientwindow.o \
		updateproductwindow.o \
		userwindow.o \
		Logger.o \
		connection.o \
		PostgresCommands.o \
		PgBankRepository.o \
		PgClientRepository.o \
		PgManagerRepository.o \
		PgUserRepository.o \
		PgProductRepository.o \
		PgRequestRepository.o \
		moc_addbankwindow.o \
		moc_addproductwindow.o \
		moc_adminwindow.o \
		moc_changepasswordwindow.o \
		moc_clientwindow.o \
		moc_mainwindow.o \
		moc_makerequestwindow.o \
		moc_managerupdateclientwindow.o \
		moc_managerwindow.o \
		moc_rateproductwindow.o \
		moc_registerclient2window.o \
		moc_registerclientwindow.o \
		moc_updatebankwindow.o \
		moc_updateclientwindow.o \
		moc_updateproductwindow.o \
		moc_userwindow.o
DIST          = /usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/spec_pre.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/unix.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/linux.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/sanitize.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/gcc-base.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/g++-base.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/g++-unix.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/qconfig.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_concurrent_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_core_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_dbus_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_edid_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_egl_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_fb_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_glx_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_gui_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_input_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_kms_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_network_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_opengl_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_openglextensions.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_printsupport_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_service_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_sql_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_testlib_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_theme_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_vulkan_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_widgets_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xkbcommon_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xml_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt_functions.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt_config.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/spec_post.prf \
		.qmake.stash \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/toolchain.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/default_pre.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resolve_config.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/default_post.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/warn_on.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resources_functions.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resources.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/moc.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/unix/opengl.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/uic.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/unix/thread.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qmake_use.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/file_copies.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/testcase_targets.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/exceptions.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/yacc.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/lex.prf \
		ppo.pro gui/ui/addbankwindow.h \
		gui/ui/addproductwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/changepasswordwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/mainwindow.h \
		gui/main/GuiApp.h \
		gui/managers_manager/GuiManagersManager.h \
		gui/client_manager/GuiClientManager.h \
		gui/product_manager/GuiProductManager.h \
		gui/request_manager/GuiRequestManager.h \
		gui/bank_manager/GuiBankManager.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/rules/BankRules.h \
		business_logic/rules/ManagerRules.h \
		business_logic/rules/ClientRules.h \
		business_logic/rules/ProductRules.h \
		business_logic/rules/RequestRules.h \
		business_logic/rules/ILogger.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IProductRepository.h \
		business_logic/IRepositories/IRequestRepository.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/ModelRequest.h \
		business_logic/models/errors.h \
		business_logic/models/constants.h \
		config/ConfigManager.h \
		gui/ui/makerequestwindow.h \
		gui/ui/managerupdateclientwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/rateproductwindow.h \
		gui/ui/registerclient2window.h \
		gui/ui/registerclientwindow.h \
		gui/ui/updatebankwindow.h \
		gui/ui/updateclientwindow.h \
		gui/ui/updateproductwindow.h \
		gui/ui/userwindow.h \
		logger/Logger.h \
		data_access/connection/connection.h \
		data_access/commands/PostgresCommands.h \
		data_access/PostgresRepositories/PgBankRepository.h \
		data_access/PostgresRepositories/PgClientRepository.h \
		data_access/PostgresRepositories/PgManagerRepository.h \
		data_access/PostgresRepositories/PgUserRepository.h \
		data_access/PostgresRepositories/PgProductRepository.h \
		data_access/PostgresRepositories/PgRequestRepository.h \
		config.txt gui/main/GuiApp.cpp \
		gui/ui/addbankwindow.cpp \
		gui/ui/addproductwindow.cpp \
		gui/ui/adminwindow.cpp \
		gui/ui/changepasswordwindow.cpp \
		gui/ui/clientwindow.cpp \
		gui/ui/mainwindow.cpp \
		gui/managers_manager/GuiManagersManager.cpp \
		gui/client_manager/GuiClientManager.cpp \
		gui/product_manager/GuiProductManager.cpp \
		gui/request_manager/GuiRequestManager.cpp \
		gui/bank_manager/GuiBankManager.cpp \
		gui/auth_manager/GuiAuthManager.cpp \
		business_logic/rules/UserRules.cpp \
		business_logic/rules/ClientRules.cpp \
		business_logic/rules/BankRules.cpp \
		business_logic/rules/ProductRules.cpp \
		business_logic/rules/RequestRules.cpp \
		business_logic/rules/ManagerRules.cpp \
		business_logic/exceptions/exceptions.cpp \
		business_logic/models/ModelUser.cpp \
		business_logic/models/ModelBank.cpp \
		business_logic/models/ModelClient.cpp \
		business_logic/models/ModelManager.cpp \
		business_logic/models/ModelProduct.cpp \
		business_logic/models/ModelRequest.cpp \
		business_logic/models/errors.cpp \
		config/ConfigManager.cpp \
		gui/ui/makerequestwindow.cpp \
		gui/ui/managerupdateclientwindow.cpp \
		gui/ui/managerwindow.cpp \
		gui/ui/rateproductwindow.cpp \
		gui/ui/registerclient2window.cpp \
		gui/ui/registerclientwindow.cpp \
		gui/ui/updatebankwindow.cpp \
		gui/ui/updateclientwindow.cpp \
		gui/ui/updateproductwindow.cpp \
		gui/ui/userwindow.cpp \
		logger/Logger.cpp \
		data_access/connection/connection.cpp \
		data_access/commands/PostgresCommands.cpp \
		data_access/PostgresRepositories/PgBankRepository.cpp \
		data_access/PostgresRepositories/PgClientRepository.cpp \
		data_access/PostgresRepositories/PgManagerRepository.cpp \
		data_access/PostgresRepositories/PgUserRepository.cpp \
		data_access/PostgresRepositories/PgProductRepository.cpp \
		data_access/PostgresRepositories/PgRequestRepository.cpp
QMAKE_TARGET  = ppo
DESTDIR       = 
TARGET        = ppo


first: all
####### Build rules

ppo: ui_addbankwindow.h ui_addproductwindow.h ui_adminwindow.h ui_changepasswordwindow.h ui_clientwindow.h ui_mainwindow.h ui_makerequestwindow.h ui_managerupdateclientwindow.h ui_managerwindow.h ui_rateproductwindow.h ui_registerclient2window.h ui_registerclientwindow.h ui_updatebankwindow.h ui_updateclientwindow.h ui_updateproductwindow.h ui_userwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ppo.pro /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf /usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/spec_pre.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/unix.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/linux.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/sanitize.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/gcc-base.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/g++-base.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/g++-unix.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/qconfig.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_concurrent_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_core_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_dbus_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_edid_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_egl_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_fb_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_glx_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_gui_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_input_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_kms_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_network_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_opengl_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_openglextensions.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_printsupport_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_service_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_sql_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_testlib_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_theme_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_vulkan_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_widgets_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xkbcommon_support_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xml_private.pri \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt_functions.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt_config.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/spec_post.prf \
		.qmake.stash \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/toolchain.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/default_pre.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resolve_config.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/default_post.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/warn_on.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resources_functions.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resources.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/moc.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/unix/opengl.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/uic.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/unix/thread.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qmake_use.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/file_copies.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/testcase_targets.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/exceptions.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/yacc.prf \
		/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/lex.prf \
		ppo.pro
	$(QMAKE) -o Makefile ppo.pro
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/spec_pre.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/unix.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/linux.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/sanitize.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/gcc-base.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/gcc-base-unix.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/g++-base.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/common/g++-unix.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/qconfig.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_concurrent.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_concurrent_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_core.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_core_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_dbus.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_dbus_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_edid_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_egl_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_fb_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_glx_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_gui.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_gui_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_input_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_kms_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_network.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_network_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_opengl.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_opengl_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_openglextensions.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_printsupport.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_printsupport_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_service_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_sql.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_sql_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_testlib.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_testlib_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_theme_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_vulkan_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_widgets.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_widgets_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xkbcommon_support_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xml.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/modules/qt_lib_xml_private.pri:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt_functions.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt_config.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++/qmake.conf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/spec_post.prf:
.qmake.stash:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/exclusive_builds.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/toolchain.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/default_pre.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resolve_config.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/default_post.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/warn_on.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qt.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resources_functions.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/resources.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/moc.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/unix/opengl.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/uic.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/unix/thread.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/qmake_use.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/file_copies.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/testcase_targets.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/exceptions.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/yacc.prf:
/usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/lex.prf:
ppo.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile ppo.pro

qmake_all: FORCE


all: Makefile ppo

dist: distdir FORCE
	(cd `dirname $(DISTDIR)` && $(TAR) $(DISTNAME).tar $(DISTNAME) && $(COMPRESS) $(DISTNAME).tar) && $(MOVE) `dirname $(DISTDIR)`/$(DISTNAME).tar.gz . && $(DEL_FILE) -r $(DISTDIR)

distdir: FORCE
	@test -d $(DISTDIR) || mkdir -p $(DISTDIR)
	$(COPY_FILE) --parents $(DIST) $(DISTDIR)/
	$(COPY_FILE) --parents /usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/data/dummy.cpp $(DISTDIR)/
	$(COPY_FILE) --parents gui/ui/addbankwindow.h gui/ui/addproductwindow.h gui/ui/adminwindow.h gui/ui/changepasswordwindow.h gui/ui/clientwindow.h gui/ui/mainwindow.h gui/main/GuiApp.h gui/managers_manager/GuiManagersManager.h gui/client_manager/GuiClientManager.h gui/product_manager/GuiProductManager.h gui/request_manager/GuiRequestManager.h gui/bank_manager/GuiBankManager.h gui/auth_manager/GuiAuthManager.h business_logic/rules/UserRules.h business_logic/rules/BankRules.h business_logic/rules/ManagerRules.h business_logic/rules/ClientRules.h business_logic/rules/ProductRules.h business_logic/rules/RequestRules.h business_logic/rules/ILogger.h business_logic/IRepositories/CRUDRepository.h business_logic/IRepositories/IBankRepository.h business_logic/IRepositories/IClientRepository.h business_logic/IRepositories/IManagerRepository.h business_logic/IRepositories/IProductRepository.h business_logic/IRepositories/IRequestRepository.h business_logic/IRepositories/IUserRepository.h business_logic/exceptions/exceptions.h business_logic/models/ModelUser.h business_logic/models/ModelBank.h business_logic/models/ModelClient.h business_logic/models/ModelManager.h business_logic/models/ModelProduct.h business_logic/models/ModelRequest.h business_logic/models/errors.h business_logic/models/constants.h config/ConfigManager.h gui/ui/makerequestwindow.h gui/ui/managerupdateclientwindow.h gui/ui/managerwindow.h gui/ui/rateproductwindow.h gui/ui/registerclient2window.h gui/ui/registerclientwindow.h gui/ui/updatebankwindow.h gui/ui/updateclientwindow.h gui/ui/updateproductwindow.h gui/ui/userwindow.h logger/Logger.h data_access/connection/connection.h data_access/commands/PostgresCommands.h data_access/PostgresRepositories/PgBankRepository.h data_access/PostgresRepositories/PgClientRepository.h data_access/PostgresRepositories/PgManagerRepository.h data_access/PostgresRepositories/PgUserRepository.h data_access/PostgresRepositories/PgProductRepository.h data_access/PostgresRepositories/PgRequestRepository.h config.txt $(DISTDIR)/
	$(COPY_FILE) --parents gui/main/GuiApp.cpp gui/ui/addbankwindow.cpp gui/ui/addproductwindow.cpp gui/ui/adminwindow.cpp gui/ui/changepasswordwindow.cpp gui/ui/clientwindow.cpp gui/ui/mainwindow.cpp gui/managers_manager/GuiManagersManager.cpp gui/client_manager/GuiClientManager.cpp gui/product_manager/GuiProductManager.cpp gui/request_manager/GuiRequestManager.cpp gui/bank_manager/GuiBankManager.cpp gui/auth_manager/GuiAuthManager.cpp business_logic/rules/UserRules.cpp business_logic/rules/ClientRules.cpp business_logic/rules/BankRules.cpp business_logic/rules/ProductRules.cpp business_logic/rules/RequestRules.cpp business_logic/rules/ManagerRules.cpp business_logic/exceptions/exceptions.cpp business_logic/models/ModelUser.cpp business_logic/models/ModelBank.cpp business_logic/models/ModelClient.cpp business_logic/models/ModelManager.cpp business_logic/models/ModelProduct.cpp business_logic/models/ModelRequest.cpp business_logic/models/errors.cpp config/ConfigManager.cpp gui/ui/makerequestwindow.cpp gui/ui/managerupdateclientwindow.cpp gui/ui/managerwindow.cpp gui/ui/rateproductwindow.cpp gui/ui/registerclient2window.cpp gui/ui/registerclientwindow.cpp gui/ui/updatebankwindow.cpp gui/ui/updateclientwindow.cpp gui/ui/updateproductwindow.cpp gui/ui/userwindow.cpp logger/Logger.cpp data_access/connection/connection.cpp data_access/commands/PostgresCommands.cpp data_access/PostgresRepositories/PgBankRepository.cpp data_access/PostgresRepositories/PgClientRepository.cpp data_access/PostgresRepositories/PgManagerRepository.cpp data_access/PostgresRepositories/PgUserRepository.cpp data_access/PostgresRepositories/PgProductRepository.cpp data_access/PostgresRepositories/PgRequestRepository.cpp $(DISTDIR)/
	$(COPY_FILE) --parents gui/ui/addbankwindow.ui gui/ui/addproductwindow.ui gui/ui/adminwindow.ui gui/ui/changepasswordwindow.ui gui/ui/clientwindow.ui gui/ui/mainwindow.ui gui/ui/makerequestwindow.ui gui/ui/managerupdateclientwindow.ui gui/ui/managerwindow.ui gui/ui/rateproductwindow.ui gui/ui/registerclient2window.ui gui/ui/registerclientwindow.ui gui/ui/updatebankwindow.ui gui/ui/updateclientwindow.ui gui/ui/updateproductwindow.ui gui/ui/userwindow.ui $(DISTDIR)/


clean: compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


distclean: clean 
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) .qmake.stash
	-$(DEL_FILE) Makefile


####### Sub-libraries

mocclean: compiler_moc_header_clean compiler_moc_objc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_objc_header_make_all compiler_moc_source_make_all

check: first

benchmark: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_moc_predefs_make_all: moc_predefs.h
compiler_moc_predefs_clean:
	-$(DEL_FILE) moc_predefs.h
moc_predefs.h: /usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/data/dummy.cpp
	g++ -pipe -O2 -std=gnu++11 -Wall -Wextra -dM -E -o moc_predefs.h /usr/lib/x86_64-linux-gnu/qt5/mkspecs/features/data/dummy.cpp

compiler_moc_header_make_all: moc_addbankwindow.cpp moc_addproductwindow.cpp moc_adminwindow.cpp moc_changepasswordwindow.cpp moc_clientwindow.cpp moc_mainwindow.cpp moc_makerequestwindow.cpp moc_managerupdateclientwindow.cpp moc_managerwindow.cpp moc_rateproductwindow.cpp moc_registerclient2window.cpp moc_registerclientwindow.cpp moc_updatebankwindow.cpp moc_updateclientwindow.cpp moc_updateproductwindow.cpp moc_userwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_addbankwindow.cpp moc_addproductwindow.cpp moc_adminwindow.cpp moc_changepasswordwindow.cpp moc_clientwindow.cpp moc_mainwindow.cpp moc_makerequestwindow.cpp moc_managerupdateclientwindow.cpp moc_managerwindow.cpp moc_rateproductwindow.cpp moc_registerclient2window.cpp moc_registerclientwindow.cpp moc_updatebankwindow.cpp moc_updateclientwindow.cpp moc_updateproductwindow.cpp moc_userwindow.cpp
moc_addbankwindow.cpp: gui/ui/addbankwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/addbankwindow.h -o moc_addbankwindow.cpp

moc_addproductwindow.cpp: gui/ui/addproductwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/addproductwindow.h -o moc_addproductwindow.cpp

moc_adminwindow.cpp: gui/ui/adminwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/adminwindow.h -o moc_adminwindow.cpp

moc_changepasswordwindow.cpp: gui/ui/changepasswordwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/changepasswordwindow.h -o moc_changepasswordwindow.cpp

moc_clientwindow.cpp: gui/ui/clientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/clientwindow.h -o moc_clientwindow.cpp

moc_mainwindow.cpp: gui/ui/mainwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/mainwindow.h -o moc_mainwindow.cpp

moc_makerequestwindow.cpp: gui/ui/makerequestwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/makerequestwindow.h -o moc_makerequestwindow.cpp

moc_managerupdateclientwindow.cpp: gui/ui/managerupdateclientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/managerupdateclientwindow.h -o moc_managerupdateclientwindow.cpp

moc_managerwindow.cpp: gui/ui/managerwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/managerwindow.h -o moc_managerwindow.cpp

moc_rateproductwindow.cpp: gui/ui/rateproductwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/rateproductwindow.h -o moc_rateproductwindow.cpp

moc_registerclient2window.cpp: gui/ui/registerclient2window.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/registerclient2window.h -o moc_registerclient2window.cpp

moc_registerclientwindow.cpp: gui/ui/registerclientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		gui/ui/registerclient2window.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/registerclientwindow.h -o moc_registerclientwindow.cpp

moc_updatebankwindow.cpp: gui/ui/updatebankwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/updatebankwindow.h -o moc_updatebankwindow.cpp

moc_updateclientwindow.cpp: gui/ui/updateclientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/updateclientwindow.h -o moc_updateclientwindow.cpp

moc_updateproductwindow.cpp: gui/ui/updateproductwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/updateproductwindow.h -o moc_updateproductwindow.cpp

moc_userwindow.cpp: gui/ui/userwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		moc_predefs.h \
		/usr/lib/qt5/bin/moc
	/usr/lib/qt5/bin/moc $(DEFINES) --include /home/pavela/arper/PPO/ppo/src/moc_predefs.h -I/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ -I/home/pavela/arper/PPO/ppo/src -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtWidgets -I/usr/include/x86_64-linux-gnu/qt5/QtGui -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/c++/11 -I/usr/include/x86_64-linux-gnu/c++/11 -I/usr/include/c++/11/backward -I/usr/lib/gcc/x86_64-linux-gnu/11/include -I/usr/local/include -I/usr/include/x86_64-linux-gnu -I/usr/include gui/ui/userwindow.h -o moc_userwindow.cpp

compiler_moc_objc_header_make_all:
compiler_moc_objc_header_clean:
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_addbankwindow.h ui_addproductwindow.h ui_adminwindow.h ui_changepasswordwindow.h ui_clientwindow.h ui_mainwindow.h ui_makerequestwindow.h ui_managerupdateclientwindow.h ui_managerwindow.h ui_rateproductwindow.h ui_registerclient2window.h ui_registerclientwindow.h ui_updatebankwindow.h ui_updateclientwindow.h ui_updateproductwindow.h ui_userwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_addbankwindow.h ui_addproductwindow.h ui_adminwindow.h ui_changepasswordwindow.h ui_clientwindow.h ui_mainwindow.h ui_makerequestwindow.h ui_managerupdateclientwindow.h ui_managerwindow.h ui_rateproductwindow.h ui_registerclient2window.h ui_registerclientwindow.h ui_updatebankwindow.h ui_updateclientwindow.h ui_updateproductwindow.h ui_userwindow.h
ui_addbankwindow.h: gui/ui/addbankwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/addbankwindow.ui -o ui_addbankwindow.h

ui_addproductwindow.h: gui/ui/addproductwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/addproductwindow.ui -o ui_addproductwindow.h

ui_adminwindow.h: gui/ui/adminwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/adminwindow.ui -o ui_adminwindow.h

ui_changepasswordwindow.h: gui/ui/changepasswordwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/changepasswordwindow.ui -o ui_changepasswordwindow.h

ui_clientwindow.h: gui/ui/clientwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/clientwindow.ui -o ui_clientwindow.h

ui_mainwindow.h: gui/ui/mainwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/mainwindow.ui -o ui_mainwindow.h

ui_makerequestwindow.h: gui/ui/makerequestwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/makerequestwindow.ui -o ui_makerequestwindow.h

ui_managerupdateclientwindow.h: gui/ui/managerupdateclientwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/managerupdateclientwindow.ui -o ui_managerupdateclientwindow.h

ui_managerwindow.h: gui/ui/managerwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/managerwindow.ui -o ui_managerwindow.h

ui_rateproductwindow.h: gui/ui/rateproductwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/rateproductwindow.ui -o ui_rateproductwindow.h

ui_registerclient2window.h: gui/ui/registerclient2window.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/registerclient2window.ui -o ui_registerclient2window.h

ui_registerclientwindow.h: gui/ui/registerclientwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/registerclientwindow.ui -o ui_registerclientwindow.h

ui_updatebankwindow.h: gui/ui/updatebankwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/updatebankwindow.ui -o ui_updatebankwindow.h

ui_updateclientwindow.h: gui/ui/updateclientwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/updateclientwindow.ui -o ui_updateclientwindow.h

ui_updateproductwindow.h: gui/ui/updateproductwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/updateproductwindow.ui -o ui_updateproductwindow.h

ui_userwindow.h: gui/ui/userwindow.ui \
		/usr/lib/qt5/bin/uic
	/usr/lib/qt5/bin/uic gui/ui/userwindow.ui -o ui_userwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_predefs_clean compiler_moc_header_clean compiler_uic_clean 

####### Compile

GuiApp.o: gui/main/GuiApp.cpp gui/main/GuiApp.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		business_logic/rules/ClientRules.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/models/ModelManager.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/rules/BankRules.h \
		business_logic/models/ModelBank.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/rules/ManagerRules.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		gui/auth_manager/GuiAuthManager.h \
		gui/product_manager/GuiProductManager.h \
		gui/request_manager/GuiRequestManager.h \
		gui/client_manager/GuiClientManager.h \
		gui/bank_manager/GuiBankManager.h \
		gui/managers_manager/GuiManagersManager.h \
		data_access/PostgresRepositories/PgUserRepository.h \
		data_access/commands/PostgresCommands.h \
		data_access/connection/connection.h \
		data_access/PostgresRepositories/PgBankRepository.h \
		data_access/PostgresRepositories/PgManagerRepository.h \
		data_access/PostgresRepositories/PgClientRepository.h \
		data_access/PostgresRepositories/PgProductRepository.h \
		data_access/PostgresRepositories/PgRequestRepository.h \
		config/ConfigManager.h \
		logger/Logger.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuiApp.o gui/main/GuiApp.cpp

addbankwindow.o: gui/ui/addbankwindow.cpp gui/ui/addbankwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_addbankwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o addbankwindow.o gui/ui/addbankwindow.cpp

addproductwindow.o: gui/ui/addproductwindow.cpp gui/ui/addproductwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_addproductwindow.h \
		gui/ui/managerwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o addproductwindow.o gui/ui/addproductwindow.cpp

adminwindow.o: gui/ui/adminwindow.cpp gui/ui/adminwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_adminwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h \
		gui/ui/changepasswordwindow.h \
		gui/ui/addbankwindow.h \
		gui/ui/updatebankwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o adminwindow.o gui/ui/adminwindow.cpp

changepasswordwindow.o: gui/ui/changepasswordwindow.cpp gui/ui/changepasswordwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_changepasswordwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o changepasswordwindow.o gui/ui/changepasswordwindow.cpp

clientwindow.o: gui/ui/clientwindow.cpp gui/ui/clientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_clientwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h \
		gui/ui/updateclientwindow.h \
		gui/ui/makerequestwindow.h \
		gui/ui/rateproductwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clientwindow.o gui/ui/clientwindow.cpp

mainwindow.o: gui/ui/mainwindow.cpp gui/ui/mainwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o gui/ui/mainwindow.cpp

GuiManagersManager.o: gui/managers_manager/GuiManagersManager.cpp gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/constants.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		business_logic/rules/UserRules.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuiManagersManager.o gui/managers_manager/GuiManagersManager.cpp

GuiClientManager.o: gui/client_manager/GuiClientManager.cpp gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		business_logic/models/ModelClient.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/models/ModelUser.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/models/ModelManager.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		business_logic/rules/UserRules.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuiClientManager.o gui/client_manager/GuiClientManager.cpp

GuiProductManager.o: gui/product_manager/GuiProductManager.cpp gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IProductRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/models/ModelBank.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuiProductManager.o gui/product_manager/GuiProductManager.cpp

GuiRequestManager.o: gui/request_manager/GuiRequestManager.cpp gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IProductRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/models/ModelUser.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/models/ModelManager.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelBank.h \
		business_logic/IRepositories/IBankRepository.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuiRequestManager.o gui/request_manager/GuiRequestManager.cpp

GuiBankManager.o: gui/bank_manager/GuiBankManager.cpp gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		business_logic/models/ModelBank.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuiBankManager.o gui/bank_manager/GuiBankManager.cpp

GuiAuthManager.o: gui/auth_manager/GuiAuthManager.cpp gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GuiAuthManager.o gui/auth_manager/GuiAuthManager.cpp

UserRules.o: business_logic/rules/UserRules.cpp business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UserRules.o business_logic/rules/UserRules.cpp

ClientRules.o: business_logic/rules/ClientRules.cpp business_logic/rules/ClientRules.h \
		business_logic/models/ModelClient.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/models/ModelUser.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/models/ModelManager.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ClientRules.o business_logic/rules/ClientRules.cpp

BankRules.o: business_logic/rules/BankRules.cpp business_logic/rules/BankRules.h \
		business_logic/models/ModelBank.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BankRules.o business_logic/rules/BankRules.cpp

ProductRules.o: business_logic/rules/ProductRules.cpp business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IProductRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/models/ModelBank.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ProductRules.o business_logic/rules/ProductRules.cpp

RequestRules.o: business_logic/rules/RequestRules.cpp business_logic/rules/RequestRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IProductRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/models/ModelUser.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/models/ModelManager.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RequestRules.o business_logic/rules/RequestRules.cpp

ManagerRules.o: business_logic/rules/ManagerRules.cpp business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/constants.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ManagerRules.o business_logic/rules/ManagerRules.cpp

exceptions.o: business_logic/exceptions/exceptions.cpp business_logic/exceptions/exceptions.h \
		business_logic/models/constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exceptions.o business_logic/exceptions/exceptions.cpp

ModelUser.o: business_logic/models/ModelUser.cpp business_logic/models/ModelUser.h \
		business_logic/models/constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ModelUser.o business_logic/models/ModelUser.cpp

ModelBank.o: business_logic/models/ModelBank.cpp business_logic/models/ModelBank.h \
		business_logic/models/constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ModelBank.o business_logic/models/ModelBank.cpp

ModelClient.o: business_logic/models/ModelClient.cpp business_logic/models/ModelClient.h \
		business_logic/models/constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ModelClient.o business_logic/models/ModelClient.cpp

ModelManager.o: business_logic/models/ModelManager.cpp business_logic/models/ModelManager.h \
		business_logic/models/constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ModelManager.o business_logic/models/ModelManager.cpp

ModelProduct.o: business_logic/models/ModelProduct.cpp business_logic/models/ModelProduct.h \
		business_logic/models/constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ModelProduct.o business_logic/models/ModelProduct.cpp

ModelRequest.o: business_logic/models/ModelRequest.cpp business_logic/models/ModelRequest.h \
		business_logic/models/constants.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ModelRequest.o business_logic/models/ModelRequest.cpp

errors.o: business_logic/models/errors.cpp business_logic/models/errors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o errors.o business_logic/models/errors.cpp

ConfigManager.o: config/ConfigManager.cpp config/ConfigManager.h \
		data_access/connection/connection.h \
		business_logic/models/constants.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ConfigManager.o config/ConfigManager.cpp

makerequestwindow.o: gui/ui/makerequestwindow.cpp gui/ui/makerequestwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_makerequestwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o makerequestwindow.o gui/ui/makerequestwindow.cpp

managerupdateclientwindow.o: gui/ui/managerupdateclientwindow.cpp gui/ui/managerupdateclientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_managerupdateclientwindow.h \
		gui/ui/managerwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o managerupdateclientwindow.o gui/ui/managerupdateclientwindow.cpp

managerwindow.o: gui/ui/managerwindow.cpp gui/ui/managerwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_managerwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h \
		gui/ui/changepasswordwindow.h \
		gui/ui/addproductwindow.h \
		gui/ui/updateproductwindow.h \
		gui/ui/updateclientwindow.h \
		gui/ui/managerupdateclientwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o managerwindow.o gui/ui/managerwindow.cpp

rateproductwindow.o: gui/ui/rateproductwindow.cpp gui/ui/rateproductwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_rateproductwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rateproductwindow.o gui/ui/rateproductwindow.cpp

registerclient2window.o: gui/ui/registerclient2window.cpp gui/ui/registerclient2window.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		gui/ui/registerclientwindow.h \
		ui_registerclient2window.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o registerclient2window.o gui/ui/registerclient2window.cpp

registerclientwindow.o: gui/ui/registerclientwindow.cpp gui/ui/registerclientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		gui/ui/registerclient2window.h \
		ui_registerclientwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o registerclientwindow.o gui/ui/registerclientwindow.cpp

updatebankwindow.o: gui/ui/updatebankwindow.cpp gui/ui/updatebankwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_updatebankwindow.h \
		gui/ui/adminwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o updatebankwindow.o gui/ui/updatebankwindow.cpp

updateclientwindow.o: gui/ui/updateclientwindow.cpp gui/ui/updateclientwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_updateclientwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/userwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o updateclientwindow.o gui/ui/updateclientwindow.cpp

updateproductwindow.o: gui/ui/updateproductwindow.cpp gui/ui/updateproductwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_updateproductwindow.h \
		gui/ui/managerwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o updateproductwindow.o gui/ui/updateproductwindow.cpp

userwindow.o: gui/ui/userwindow.cpp gui/ui/userwindow.h \
		gui/auth_manager/GuiAuthManager.h \
		business_logic/rules/UserRules.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		business_logic/rules/ILogger.h \
		gui/managers_manager/GuiManagersManager.h \
		business_logic/rules/ManagerRules.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelClient.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/IClientRepository.h \
		gui/client_manager/GuiClientManager.h \
		business_logic/rules/ClientRules.h \
		gui/product_manager/GuiProductManager.h \
		business_logic/rules/ProductRules.h \
		business_logic/models/ModelProduct.h \
		business_logic/IRepositories/IProductRepository.h \
		gui/bank_manager/GuiBankManager.h \
		business_logic/rules/BankRules.h \
		gui/request_manager/GuiRequestManager.h \
		business_logic/rules/RequestRules.h \
		business_logic/models/ModelRequest.h \
		business_logic/IRepositories/IRequestRepository.h \
		ui_userwindow.h \
		gui/ui/mainwindow.h \
		gui/ui/clientwindow.h \
		gui/ui/adminwindow.h \
		gui/ui/managerwindow.h \
		gui/ui/registerclientwindow.h \
		gui/ui/registerclient2window.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o userwindow.o gui/ui/userwindow.cpp

Logger.o: logger/Logger.cpp logger/Logger.h \
		business_logic/models/constants.h \
		business_logic/rules/ILogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Logger.o logger/Logger.cpp

connection.o: data_access/connection/connection.cpp data_access/connection/connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o connection.o data_access/connection/connection.cpp

PostgresCommands.o: data_access/commands/PostgresCommands.cpp data_access/commands/PostgresCommands.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/models/ModelClient.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/ModelRequest.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PostgresCommands.o data_access/commands/PostgresCommands.cpp

PgBankRepository.o: data_access/PostgresRepositories/PgBankRepository.cpp data_access/PostgresRepositories/PgBankRepository.h \
		business_logic/models/ModelBank.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IBankRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		data_access/commands/PostgresCommands.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelClient.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/ModelRequest.h \
		data_access/connection/connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PgBankRepository.o data_access/PostgresRepositories/PgBankRepository.cpp

PgClientRepository.o: data_access/PostgresRepositories/PgClientRepository.cpp data_access/PostgresRepositories/PgClientRepository.h \
		business_logic/models/ModelClient.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IClientRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		data_access/commands/PostgresCommands.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/ModelRequest.h \
		data_access/connection/connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PgClientRepository.o data_access/PostgresRepositories/PgClientRepository.cpp

PgManagerRepository.o: data_access/PostgresRepositories/PgManagerRepository.cpp data_access/PostgresRepositories/PgManagerRepository.h \
		business_logic/models/ModelManager.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IManagerRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		data_access/commands/PostgresCommands.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelClient.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/ModelRequest.h \
		data_access/connection/connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PgManagerRepository.o data_access/PostgresRepositories/PgManagerRepository.cpp

PgUserRepository.o: data_access/PostgresRepositories/PgUserRepository.cpp data_access/PostgresRepositories/PgUserRepository.h \
		business_logic/models/ModelUser.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IUserRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		data_access/commands/PostgresCommands.h \
		business_logic/models/ModelClient.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/ModelRequest.h \
		data_access/connection/connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PgUserRepository.o data_access/PostgresRepositories/PgUserRepository.cpp

PgProductRepository.o: data_access/PostgresRepositories/PgProductRepository.cpp data_access/PostgresRepositories/PgProductRepository.h \
		business_logic/models/ModelProduct.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IProductRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		data_access/commands/PostgresCommands.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelClient.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelRequest.h \
		data_access/connection/connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PgProductRepository.o data_access/PostgresRepositories/PgProductRepository.cpp

PgRequestRepository.o: data_access/PostgresRepositories/PgRequestRepository.cpp data_access/PostgresRepositories/PgRequestRepository.h \
		business_logic/models/ModelRequest.h \
		business_logic/models/constants.h \
		business_logic/IRepositories/IRequestRepository.h \
		business_logic/IRepositories/CRUDRepository.h \
		business_logic/exceptions/exceptions.h \
		data_access/commands/PostgresCommands.h \
		business_logic/models/ModelUser.h \
		business_logic/models/ModelClient.h \
		business_logic/models/ModelBank.h \
		business_logic/models/ModelManager.h \
		business_logic/models/ModelProduct.h \
		data_access/connection/connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PgRequestRepository.o data_access/PostgresRepositories/PgRequestRepository.cpp

moc_addbankwindow.o: moc_addbankwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_addbankwindow.o moc_addbankwindow.cpp

moc_addproductwindow.o: moc_addproductwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_addproductwindow.o moc_addproductwindow.cpp

moc_adminwindow.o: moc_adminwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_adminwindow.o moc_adminwindow.cpp

moc_changepasswordwindow.o: moc_changepasswordwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_changepasswordwindow.o moc_changepasswordwindow.cpp

moc_clientwindow.o: moc_clientwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_clientwindow.o moc_clientwindow.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_makerequestwindow.o: moc_makerequestwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_makerequestwindow.o moc_makerequestwindow.cpp

moc_managerupdateclientwindow.o: moc_managerupdateclientwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_managerupdateclientwindow.o moc_managerupdateclientwindow.cpp

moc_managerwindow.o: moc_managerwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_managerwindow.o moc_managerwindow.cpp

moc_rateproductwindow.o: moc_rateproductwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_rateproductwindow.o moc_rateproductwindow.cpp

moc_registerclient2window.o: moc_registerclient2window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_registerclient2window.o moc_registerclient2window.cpp

moc_registerclientwindow.o: moc_registerclientwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_registerclientwindow.o moc_registerclientwindow.cpp

moc_updatebankwindow.o: moc_updatebankwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_updatebankwindow.o moc_updatebankwindow.cpp

moc_updateclientwindow.o: moc_updateclientwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_updateclientwindow.o moc_updateclientwindow.cpp

moc_updateproductwindow.o: moc_updateproductwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_updateproductwindow.o moc_updateproductwindow.cpp

moc_userwindow.o: moc_userwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_userwindow.o moc_userwindow.cpp

####### Install

install_target: first FORCE
	@test -d $(INSTALL_ROOT)/opt/ppo/bin || mkdir -p $(INSTALL_ROOT)/opt/ppo/bin
	$(QINSTALL_PROGRAM) $(QMAKE_TARGET) $(INSTALL_ROOT)/opt/ppo/bin/$(QMAKE_TARGET)
	-$(STRIP) $(INSTALL_ROOT)/opt/ppo/bin/$(QMAKE_TARGET)

uninstall_target: FORCE
	-$(DEL_FILE) $(INSTALL_ROOT)/opt/ppo/bin/$(QMAKE_TARGET)
	-$(DEL_DIR) $(INSTALL_ROOT)/opt/ppo/bin/ 


install: install_target  FORCE

uninstall: uninstall_target  FORCE

FORCE:

